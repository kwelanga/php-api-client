<?php
/**
 * PrincipalItem
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  KwelangaAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Kwelanga Online Solutions
 *
 * OpenAPI for Kwelanga Online Solutions
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@kwelangasolutions.co.za
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace KwelangaAPI\Model;

use \ArrayAccess;
use \KwelangaAPI\ObjectSerializer;

/**
 * PrincipalItem Class Doc Comment
 *
 * @category Class
 * @package  KwelangaAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PrincipalItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PrincipalItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'float',
        'name' => 'string',
        'physical_add1' => 'string',
        'physical_add2' => 'string',
        'physical_add3' => 'string',
        'physical_add4' => 'string',
        'postal_add1' => 'string',
        'postal_add2' => 'string',
        'postal_add3' => 'string',
        'postal_add4' => 'string',
        'office_tel' => 'string[]',
        'email_add' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'name' => null,
        'physical_add1' => null,
        'physical_add2' => null,
        'physical_add3' => null,
        'physical_add4' => null,
        'postal_add1' => null,
        'postal_add2' => null,
        'postal_add3' => null,
        'postal_add4' => null,
        'office_tel' => null,
        'email_add' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'physical_add1' => 'physical_add1',
        'physical_add2' => 'physical_add2',
        'physical_add3' => 'physical_add3',
        'physical_add4' => 'physical_add4',
        'postal_add1' => 'postal_add1',
        'postal_add2' => 'postal_add2',
        'postal_add3' => 'postal_add3',
        'postal_add4' => 'postal_add4',
        'office_tel' => 'office_tel',
        'email_add' => 'email_add'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'physical_add1' => 'setPhysicalAdd1',
        'physical_add2' => 'setPhysicalAdd2',
        'physical_add3' => 'setPhysicalAdd3',
        'physical_add4' => 'setPhysicalAdd4',
        'postal_add1' => 'setPostalAdd1',
        'postal_add2' => 'setPostalAdd2',
        'postal_add3' => 'setPostalAdd3',
        'postal_add4' => 'setPostalAdd4',
        'office_tel' => 'setOfficeTel',
        'email_add' => 'setEmailAdd'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'physical_add1' => 'getPhysicalAdd1',
        'physical_add2' => 'getPhysicalAdd2',
        'physical_add3' => 'getPhysicalAdd3',
        'physical_add4' => 'getPhysicalAdd4',
        'postal_add1' => 'getPostalAdd1',
        'postal_add2' => 'getPostalAdd2',
        'postal_add3' => 'getPostalAdd3',
        'postal_add4' => 'getPostalAdd4',
        'office_tel' => 'getOfficeTel',
        'email_add' => 'getEmailAdd'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['physical_add1'] = isset($data['physical_add1']) ? $data['physical_add1'] : null;
        $this->container['physical_add2'] = isset($data['physical_add2']) ? $data['physical_add2'] : null;
        $this->container['physical_add3'] = isset($data['physical_add3']) ? $data['physical_add3'] : null;
        $this->container['physical_add4'] = isset($data['physical_add4']) ? $data['physical_add4'] : null;
        $this->container['postal_add1'] = isset($data['postal_add1']) ? $data['postal_add1'] : null;
        $this->container['postal_add2'] = isset($data['postal_add2']) ? $data['postal_add2'] : null;
        $this->container['postal_add3'] = isset($data['postal_add3']) ? $data['postal_add3'] : null;
        $this->container['postal_add4'] = isset($data['postal_add4']) ? $data['postal_add4'] : null;
        $this->container['office_tel'] = isset($data['office_tel']) ? $data['office_tel'] : null;
        $this->container['email_add'] = isset($data['email_add']) ? $data['email_add'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return float
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param float $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets physical_add1
     *
     * @return string|null
     */
    public function getPhysicalAdd1()
    {
        return $this->container['physical_add1'];
    }

    /**
     * Sets physical_add1
     *
     * @param string|null $physical_add1 physical_add1
     *
     * @return $this
     */
    public function setPhysicalAdd1($physical_add1)
    {
        $this->container['physical_add1'] = $physical_add1;

        return $this;
    }

    /**
     * Gets physical_add2
     *
     * @return string|null
     */
    public function getPhysicalAdd2()
    {
        return $this->container['physical_add2'];
    }

    /**
     * Sets physical_add2
     *
     * @param string|null $physical_add2 physical_add2
     *
     * @return $this
     */
    public function setPhysicalAdd2($physical_add2)
    {
        $this->container['physical_add2'] = $physical_add2;

        return $this;
    }

    /**
     * Gets physical_add3
     *
     * @return string|null
     */
    public function getPhysicalAdd3()
    {
        return $this->container['physical_add3'];
    }

    /**
     * Sets physical_add3
     *
     * @param string|null $physical_add3 physical_add3
     *
     * @return $this
     */
    public function setPhysicalAdd3($physical_add3)
    {
        $this->container['physical_add3'] = $physical_add3;

        return $this;
    }

    /**
     * Gets physical_add4
     *
     * @return string|null
     */
    public function getPhysicalAdd4()
    {
        return $this->container['physical_add4'];
    }

    /**
     * Sets physical_add4
     *
     * @param string|null $physical_add4 physical_add4
     *
     * @return $this
     */
    public function setPhysicalAdd4($physical_add4)
    {
        $this->container['physical_add4'] = $physical_add4;

        return $this;
    }

    /**
     * Gets postal_add1
     *
     * @return string|null
     */
    public function getPostalAdd1()
    {
        return $this->container['postal_add1'];
    }

    /**
     * Sets postal_add1
     *
     * @param string|null $postal_add1 postal_add1
     *
     * @return $this
     */
    public function setPostalAdd1($postal_add1)
    {
        $this->container['postal_add1'] = $postal_add1;

        return $this;
    }

    /**
     * Gets postal_add2
     *
     * @return string|null
     */
    public function getPostalAdd2()
    {
        return $this->container['postal_add2'];
    }

    /**
     * Sets postal_add2
     *
     * @param string|null $postal_add2 postal_add2
     *
     * @return $this
     */
    public function setPostalAdd2($postal_add2)
    {
        $this->container['postal_add2'] = $postal_add2;

        return $this;
    }

    /**
     * Gets postal_add3
     *
     * @return string|null
     */
    public function getPostalAdd3()
    {
        return $this->container['postal_add3'];
    }

    /**
     * Sets postal_add3
     *
     * @param string|null $postal_add3 postal_add3
     *
     * @return $this
     */
    public function setPostalAdd3($postal_add3)
    {
        $this->container['postal_add3'] = $postal_add3;

        return $this;
    }

    /**
     * Gets postal_add4
     *
     * @return string|null
     */
    public function getPostalAdd4()
    {
        return $this->container['postal_add4'];
    }

    /**
     * Sets postal_add4
     *
     * @param string|null $postal_add4 postal_add4
     *
     * @return $this
     */
    public function setPostalAdd4($postal_add4)
    {
        $this->container['postal_add4'] = $postal_add4;

        return $this;
    }

    /**
     * Gets office_tel
     *
     * @return string[]|null
     */
    public function getOfficeTel()
    {
        return $this->container['office_tel'];
    }

    /**
     * Sets office_tel
     *
     * @param string[]|null $office_tel office_tel
     *
     * @return $this
     */
    public function setOfficeTel($office_tel)
    {
        $this->container['office_tel'] = $office_tel;

        return $this;
    }

    /**
     * Gets email_add
     *
     * @return string[]|null
     */
    public function getEmailAdd()
    {
        return $this->container['email_add'];
    }

    /**
     * Sets email_add
     *
     * @param string[]|null $email_add email_add
     *
     * @return $this
     */
    public function setEmailAdd($email_add)
    {
        $this->container['email_add'] = $email_add;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


